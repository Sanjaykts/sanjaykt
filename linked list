#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
}*start=NULL;
void insertfront()
{
    struct node *nn;
    nn=(struct node*)malloc(sizeof(struct node));
    scanf("%d",&nn->data);
    nn->next=NULL;
    if(start==NULL)
    {
        //list is empty
        start=nn;
    }
    else
    {
        nn->next=start;
        start=nn;
    }
}
void insertend()
{
    struct node *nn,*t;
    nn=(struct node*)malloc(sizeof(struct node));
    scanf("%d",&nn->data);
    nn->next=NULL;
    if(start==NULL)
    {
        start=nn;
    }
    else
    {
        t=start;
        while(t->next!=NULL)
        {
            t=t->next;
        }
        t->next=nn;
    }//inserted succesfully
}
void insertpos()
{
    int count=2,x;
    scanf("%d",&x);
    struct node*nn,*t=start;
    nn=(struct node*)malloc(sizeof(struct node));
    scanf("%d",&nn->data);
    nn->next=NULL;
    if(start==NULL)
    {
        //list is empty
        start=nn;
    }
    else
    {
        while(count!=x && t!=NULL)
        {
            t=t->next;
            count++;
        }
        if(t==NULL)
        {
            //list is empty
        }
        else
        {
            nn->next=t->next;
            t->next=nn;
        }
    }
}
void display()
{
    struct node *t=start;
    if(start==NULL)
    {
        //list is empty
    }
    
    else
    {
    while(t!=NULL)
    {
        printf("%d ",t->data);
        t=t->next;
    }printf("\n");
    }
}
int main()
{
    int p;
    do
    {
        //enter p
        scanf("%d",&p);
        switch(p)
        {
            case 1:insertfront();
            break;
            case 2:insertend();
            break;
            case 3:insertpos();
            break;
            case 4:display();
            break;
            case 5:exit(0);
            break;
            default:printf("Wrong choice");
        }
    }while(p!=5);
    
}
